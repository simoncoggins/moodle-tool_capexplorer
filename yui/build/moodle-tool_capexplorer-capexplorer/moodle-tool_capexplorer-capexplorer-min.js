YUI.add("moodle-tool_capexplorer-capexplorer",function(e,t){M.tool_capexplorer=M.tool_capexplorer||{},M.tool_capexplorer.capexplorer={init:function(t){var n,r;this.init_autocomplete(t),this.tree=new e.TreeView({container:"#contexttree",nodes:t.initialtree}),this.tree.on("select",this.tree_set_form_field),this.tree.plug(e.Plugin.Tree.Lazy,{load:function(i,s){var o,u;if(i.children!==undefined&&i.children.length!==0)return;r=i.data.nodeType,o=i.data.instanceId!==undefined?i.data.instanceId:0,u={instanceid:o,nodetype:r},e.io(M.cfg.wwwroot+"/"+t.admin+"/tool/capexplorer/ajax/getchildnodes.php",{on:{success:function(t,r){try{n=e.JSON.parse(r.responseText)}catch(s){window.alert("JSON Parse failed!");return}if(n.error!==undefined){window.alert(n.error);return}i.append(n)}},data:u}),s()}}),this.tree.render(),e.one("#tree-loading-message").hide(),this.tree_select_node(e,t.contextids)},tree_set_form_field:function(t){if(t.node.data.nodeType==="userdir"){t.preventDefault(),t.node.toggleOpen();return}var n=t.node.data.contextId,r=e.one("input[name=contextid]");r.set("value",n)},tree_select_node:function(e,t,n){var r,i,s;if(n===undefined){n=this.tree.rootNode,this.tree_select_node(e,t,n);return}r=t.shift(),n.open();for(i=0;i<n.children.length;i++)if(n.children[i].data.contextId===r){t.length===0?(n.children[i].data.nodeType==="system"&&n.children[i].open(),n.children[i].select()):this.tree_select_node(e,t,n.children[i]);return}for(s=0;s<n.children.length;s++)n.children[s].data.nodeType==="userdir"&&(t.unshift(r),this.tree_select_node(e,t,n.children[s])),n.children[s].data.nodeType==="system"&&this.tree_select_node(e,t,n.children[s])},init_autocomplete:function(t){var n=e.one("#id_username");e.one("body").addClass("yui3-skin-sam"),n.plug(e.Plugin.AutoComplete,{source:M.cfg.wwwroot+"/"+t.admin+"/tool/capexplorer/ajax/getusers.php?search={query}",resultTextLocator:"username",resultFilters:function(t,n){return t=t.toLowerCase(),e.Array.filter(n,function(e){return e.raw.autocompletestr.toLowerCase().indexOf(t)!==-1})},resultFormatter:function(t,n){return e.Array.map(n,function(n){return e.Highlight.all(n.raw.autocompletestr,t)})}}),e.one("#id_capability").plug(e.Plugin.AutoComplete,{resultHighlighter:"phraseMatch",resultFilters:"phraseMatch",source:t.capabilities})}}},"@VERSION@",{requires:["json","autocomplete","autocomplete-filters","autocomplete-highlighters","gallery-sm-treeview","tree-lazy"]});
